@page "/metrics"
@page "/metrics/{ResourceParameter}"
@page "/metrics/{ResourceParameter}/{*metricParameter}"

@using ContainerControlPanel.Domain.Models
@using ContainerControlPanel.Web.Components.Metrics
@using MudBlazor

<div class="label">
	<h1>@Localizer[Locales.Resource.Metrics]</h1>
</div>

<div class="flex">
	<div style="margin-left: 26px; margin-bottom: 24px; width: 200px;">
		<MudSelect T="string" AnchorOrigin="Origin.BottomCenter" Placeholder="@Localizer[Locales.Resource.ChooseResource]" TransformOrigin="Origin.TopCenter" @bind-Value="currentResource">
			@if (allMetrics.Count > 0)
			{
				@foreach (var resource in allMetrics.Select(x => x.ResourceName).Distinct())
				{
					<MudSelectItem Value="@resource">@resource</MudSelectItem>
				}
			}
		</MudSelect>
	</div>
</div>

@if (currentResource == null) 
{
	<div class="not-found">
		<svg xmlns="http://www.w3.org/2000/svg" width="24px" fill="#00B577" class="bi bi-bar-chart-line" viewBox="0 0 16 16">
			<path d="M11 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3h1V7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7h1zm1 12h2V2h-2zm-3 0V7H7v7zm-5 0v-3H2v3z" />
		</svg>
		@Localizer[Locales.Resource.ChooseResourceTo].
	</div>
}

@if (currentResource != null && allMetrics.Count > 0)
{
	<div class="metrics-list">
		<MudList T="string">
			@foreach (var scopeMetric in allMetrics.Find(x => x.ResourceName == currentResource).ScopeMetrics)
			{
				<div class="position-relative">
					<span class="expand-icon">
						<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
							<path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708" />
						</svg>
					</span>
					<MudListItem Text="@scopeMetric.Scope.Name" Expanded>
						<NestedList>
							@foreach (var metric in scopeMetric.Metrics) 
							{
								@* <MudListItem Disabled="@(!compatibleMetrics.Contains(metric.Name))"> *@
								<MudListItem>
									<span @onclick="() => { currentMetric = metric; }">
										@metric.Name
									</span>							
								</MudListItem>
							}				
						</NestedList>
					</MudListItem>
				</div>
			}
		</MudList>
	</div>
	<div class="metric-details">
		@if (currentMetric != null)
		{
			<h2>@currentMetric.Name</h2>
			<span>@currentMetric.Description</span>

			if (currentMetric.Histogram != null) 
			{
				<Histogram Metrics="currentMetric" />
			}
			else
			{
				<Sum Metrics="currentMetric" ResourceName="@currentResource" />
			}
		}
		else 
		{
			<span>
				@Localizer[Locales.Resource.ChooseInstrument].
			</span>		
		}
	</div>
}
else if (currentResource != null)
{
	<div class="not-found">		
		@Localizer[Locales.Resource.NoMetricsFound].
	</div>
}


