@page "/"
@page "/containers"
@page "/containers/{LiveFilter}"

@using MudBlazor
@using Locales

<div class="label">
	<h1>@Localizer[Resource.Containers]</h1>
	@if (!bool.Parse(Configuration["Realtime"]))
	{
		<div style="width: 100px;">
			<MudIconButton @onclick="() => { LoadContainers(true); }" Color="Color.Primary" Icon="@Icons.Material.Filled.Refresh" />
		</div>
	}
	<div style="margin-left: auto; width: 200px;">
		<MudSelect Immediate="true" T="bool" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" @bind-Value="liveFilter">		
			<MudSelectItem Value="true">@Localizer[Resource.Running]</MudSelectItem>
			<MudSelectItem Value="false">@Localizer[Resource.All]</MudSelectItem>
		</MudSelect>
	</div>
</div>

<div class="data-grid">
	<div class="data-grid-row header">
		<div class="data-grid-cell">
			@Localizer[Resource.ContainerId]
		</div>
		<div class="data-grid-cell">
			@Localizer[Resource.Name]
		</div>
		<div class="data-grid-cell">
			@Localizer[Resource.Status]		
		</div>
		<div class="data-grid-cell">
			@Localizer[Resource.Image]
		</div>
		<div class="data-grid-cell">
			@Localizer[Resource.Ports]
		</div>
		<div class="data-grid-cell">
			@Localizer[Resource.CreatedAt]
		</div>
		<div class="data-grid-cell">
			@Localizer[Resource.Action]
		</div>
	</div>
	@if (containers.Count < 1)
	{
		<div class="not-found">
			@Localizer[Resource.NoAliveContainers].
		</div>
	}	
	else 
	{
		<div class="data-container">
			@foreach (var container in containers)
			{
				<div class="data-grid-row data">
					<div class="data-grid-cell">
						@container.ContainerId
					</div>
					<div class="data-grid-cell">
						@container.Names
					</div>
					<div class="data-grid-cell">
						@if (container.Status.StartsWith("Restarting")
								|| container.Status.StartsWith("Stopping...")
								|| container.Status.StartsWith("Starting..."))
						{
							<span class="loader"></span>
						}
						else if (container.Status.StartsWith("Exited"))
						{
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#A6001A" class="status-check" viewBox="0 0 16 16">
								<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z" />
							</svg>
						}
						else
						{
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="green" class="status-check" viewBox="0 0 16 16">
								<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
							</svg>
						}
						<div class="status-label">
							@container.Status
						</div>					
					</div>
					<div class="data-grid-cell">
						<div class="text-overflow">
							@container.Image
						</div>
					</div>
					<div class="data-grid-cell">
						@container.Ports
					</div>
					<div class="data-grid-cell">
						@container.Created.ToString("dd/MM/yyyy")
					</div>
					<div class="data-grid-cell">
						<AuthorizeView Roles="Administrator">
							@if (!container.Status.Contains("Exited"))
							{
								<MudTooltip Text="@Localizer[Resource.Stop]">
									<MudIconButton @onclick="async () => { await StopContainer(container.ContainerId); }" Color="Color.Primary" Icon="@Icons.Material.Filled.Stop"/>
								</MudTooltip>
								<MudTooltip Text="@Localizer[Resource.Restart]">
									<MudIconButton @onclick="async () => { await RestartContainer(container.ContainerId); }" Color="Color.Primary" Icon="@Icons.Material.Filled.Refresh" />
								</MudTooltip>
							}
							else
							{
								<MudTooltip Text="@Localizer[Resource.Start]">
									<MudIconButton @onclick="async () => { await StartContainer(container.ContainerId); }" Color="Color.Primary" Icon="@Icons.Material.Filled.PlayArrow" />
								</MudTooltip>
							}
							<MudDivider Vertical="true" FlexItem="true" Class="opacity-100 mx-2"/>
						</AuthorizeView>
						<MudMenu AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Color="Color.Dark">
							<ActivatorContent>
								<MudTooltip Text="@Localizer[Resource.More]">
									<MudIconButton Color="Color.Primary" Icon="@Icons.Material.Filled.MoreHoriz" />
								</MudTooltip>
							</ActivatorContent>
							<ChildContent>
								<MudMenuItem @onclick="() => { OpenDetailsDialogAsync(container.ContainerId); }">@Localizer[Resource.ViewDetails]</MudMenuItem>
								<MudMenuItem @onclick="() => { ViewLogs(container.ContainerId); }">@Localizer[Resource.ViewLogs]</MudMenuItem>
								@if (IsASPNETCoreContainer(container.ContainerId))
								{
									<MudMenuItem @onclick="() => { ViewApiDocs(container.ContainerId); }">@Localizer[Resource.ViewAPIDocs]</MudMenuItem>
								}
							</ChildContent>
						</MudMenu>
					</div>
				</div>
			}
		</div>
	}
</div>

<MudDrawer @bind-Open="@_open" Width="@_width" Height="@_height" Anchor="@_anchor" Elevation="1" Variant="@DrawerVariant.Temporary">
	<MudDrawerHeader>
		<MudText Typo="Typo.h6">My App</MudText>
	</MudDrawerHeader>
	<MudNavMenu>
		<MudNavLink Match="NavLinkMatch.All">Store</MudNavLink>
		<MudNavLink Match="NavLinkMatch.All">Library</MudNavLink>
		<MudNavLink Match="NavLinkMatch.All">Community</MudNavLink>
	</MudNavMenu>
</MudDrawer>


