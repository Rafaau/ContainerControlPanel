@page "/traces/{traceId}"
@using ContainerControlPanel.Domain.Models

@if (trace != null) 
{
	<div class="flex">
		<div class="label">
			@trace.ResourceSpans[0].GetServiceName(): @trace.ResourceSpans[0].GetTraceName()
		</div>
		<div class="trace-id">
			@trace.GetTraceId()
		</div>
	</div>
	<div class="flex">
		@Localizer[Locales.Resource.TraceDetails]:
		<span class="details-span">
			<b>@trace.ResourceSpans[0].GetTimestamp(int.Parse(Configuration["TimeOffset"])).ToString("MM.dd.yyyy HH:mm:ss")</b>
		</span>	
		@Localizer[Locales.Resource.Duration]:
		<span class="details-span">
			<b>@((spans[0].GetDuration().TotalMicroseconds / 1000).ToString()) ms</b>
		</span>
		@Localizer[Locales.Resource.Resources]:
		<span class="details-span">
			<b>@trace.ResourceSpans.Count</b>
		</span>
		@Localizer[Locales.Resource.Depth]:
		<span class="details-span">
			<b>@spans.Count</b>
		</span>
	</div>

	<div class="data-grid">
		<div class="data-grid-row header">
			<div class="data-grid-cell">
				@Localizer[Locales.Resource.Name]
			</div>
			<div class="data-grid-cell">
				@intervals[0]
			</div>
			<div class="data-grid-cell">
				@intervals[1]
			</div>
			<div class="data-grid-cell">
				@intervals[2]
			</div>
			<div class="data-grid-cell">
				@intervals[3]
				<div style="margin-left: auto;">
					@intervals[4]
				</div>
			</div>
		</div>
		@foreach (var (span, index) in spans.Select((value, i) => (value, i)))
		{
			<div @onclick="() => { currentSpan = span; }" class="data-grid-row data" style="@(currentSpan == span ? "background-color: rgba(255,255,255,0.1);" : "")">
				<div class="data-grid-cell @(index > 0 ? "tab" : "")">
					@if (index == 0) 
					{
						<span>
							<svg class="span-kind-icon" style="filter: saturate(2000%); width: 16px; margin-right: 6px; fill: @($"#{GetHexString(@trace.ResourceSpans[0].GetServiceName())}");" focusable="false" viewBox="0 0 16 16" aria-hidden="true">
								<path d="M11.41 1.59A2 2 0 0 0 10 1H6a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V3a2 2 0 0 0-.59-1.41ZM9.85 12.85a.5.5 0 0 1-.35.15h-3a.5.5 0 1 1 0-1h3a.5.5 0 0 1 .35.85Zm0-2a.5.5 0 0 1-.35.15h-3a.5.5 0 1 1 0-1h3a.5.5 0 0 1 .35.85Zm0-6A.5.5 0 0 1 9.5 5h-3a.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .35.85Z"></path>
							</svg>
						</span>
					}
					<div class="text-overflow">
						@span.GetAttributeValue("http.route")
						@if (@span.GetAttributeValue("http.route").Equals("Browser Link")) 
						{
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" style="margin-left: 6px; fill: #e6e687;" class="bi bi-arrow-right-circle-fill" viewBox="0 0 16 16">
								<path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z" />
							</svg>
						}
						<span class="method">
							@span.GetAttributeValue("http.request.method")
						</span>
					</div>				
				</div>
				<div class="data-grid-cell">
					<div 
						class="duration-marker" 
						style="background-color: @($"#{GetHexString(@trace.ResourceSpans[0].GetServiceName())}");
							   width: @(GetMarkerWidth(span));
							   left: @(GetMarkerLeft(span));">
					</div>
					<div class="duration-span" style="left: @(GetDurationSpanLeft(span));">
						@((span.GetDuration().TotalMicroseconds / 1000).ToString()) ms
					</div>
				</div>
				<div class="data-grid-cell">

				</div>
				<div class="data-grid-cell">

				</div>
				<div class="data-grid-cell">

				</div>
			</div>
		}
	</div>
	<div class="span-container">
		<div class="details-container">
			<div class="details-label">@Localizer[Locales.Resource.Details]</div>
			<div class="details-row">
				<div>Trace ID</div>
				<div class="text-overflow">@currentSpan.TraceId</div>
			</div>
			<div class="details-row">
				<div>Name</div>
				<div class="text-overflow">@currentSpan.Name</div>
			</div>
			<div class="details-row">
				<div>Kind</div>
				<div class="text-overflow">@currentSpan.Kind.Substring(@currentSpan.Kind.LastIndexOf("_") + 1)</div>
			</div>
			<div class="details-row">
				<div>Start time</div>
				<div class="text-overflow">@currentSpan.GetStartDate(int.Parse(Configuration["TimeOffset"])).ToString("HH:mm:ss.fffK")</div>
			</div>
			<div class="details-row">
				<div>End time</div>
				<div class="text-overflow">@currentSpan.GetEndDate(int.Parse(Configuration["TimeOffset"])).ToString("HH:mm:ss.fffK")</div>
			</div>
		</div>
		<div class="details-container">
			<div class="details-label">@Localizer[Locales.Resource.Attributes]</div>
			@foreach (var attr in currentSpan.GetAttributes())
			{
				<div class="details-row">
					<div>@attr.Key</div>
					<div class="text-overflow">@attr.Value</div>
				</div>
			}
		</div>
	</div>
}



